#side Ehren
#color F1F
#type Eater
#hardware
  constructor 1
  eater 1
  food-sensor 8
  processor 10
  engine .1
  energy 100 100
#code

#vector dest
#vector origin
#vector food-at
#var delay 100

new-dest:
  0 world-width random 0 world-height random dest!
return


search-food:
  do
    40 periodic-food-sensor if
      food-found if
        food-position food-at!
        seek-food& jump
      then
    then

    dest seek-location
  forever
return


eating:
do
  autoconstruct
  eaten nif
    0 constructor-rate!
    go-home& jump
  then

  food-at seek-location
forever
return


seek-food:
  do
    eaten nif
      food-at seek-location
      position food-at dist .5 < if
        search-food& jump
      then
    else
      eating& jump
    then
  forever
return

go-home:
  do
    dest seek-location
    position dest dist 1 < if
      search-food& jump
    then
  forever
return


find-home:
  #var x
  #var y
  #var x-scale
  #var y-scale

  world-width 10 / floor x-scale!
  world-height 10 / floor y-scale!


  id 10 / floor x!
  id 10 mod y!


  x 10 mod x!
  y 10 mod y!

  x x-scale * x!
  y y-scale * y!

  x x-scale + x!

  x y dest!

  go-home& jump
return


#start

find-home& jump

#end
